
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BOOL CHAR DEC DECIMAL DO ELSE EQ FLOAT FOR GT GTE ID IF INC INT LT LTE NE NUMBER STRING STRINGLITERAL VAR WHILEstart : assign \n\t| expr assign : ID '=' exprexpr : expr '+' termexpr : expr '-' termexpr : termterm : term '*' factorterm : term '/' factorterm : factorfactor : DECIMAL\n    | NUMBERfactor : '(' expr ')'"
    
_lr_action_items = {'ID':([0,],[4,]),'DECIMAL':([0,9,10,11,12,13,14,],[7,7,7,7,7,7,7,]),'NUMBER':([0,9,10,11,12,13,14,],[8,8,8,8,8,8,8,]),'(':([0,9,10,11,12,13,14,],[9,9,9,9,9,9,9,]),'$end':([1,2,3,5,6,7,8,16,17,18,19,20,21,],[0,-1,-2,-6,-9,-10,-11,-4,-5,-3,-7,-8,-12,]),'+':([3,5,6,7,8,15,16,17,18,19,20,21,],[10,-6,-9,-10,-11,10,-4,-5,10,-7,-8,-12,]),'-':([3,5,6,7,8,15,16,17,18,19,20,21,],[11,-6,-9,-10,-11,11,-4,-5,11,-7,-8,-12,]),'=':([4,],[12,]),')':([5,6,7,8,15,16,17,19,20,21,],[-6,-9,-10,-11,21,-4,-5,-7,-8,-12,]),'*':([5,6,7,8,16,17,19,20,21,],[13,-9,-10,-11,13,13,-7,-8,-12,]),'/':([5,6,7,8,16,17,19,20,21,],[14,-9,-10,-11,14,14,-7,-8,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'assign':([0,],[2,]),'expr':([0,9,12,],[3,15,18,]),'term':([0,9,10,11,12,],[5,5,16,17,5,]),'factor':([0,9,10,11,12,13,14,],[6,6,6,6,6,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> assign','start',1,'p_start','yacc.py',6),
  ('start -> expr','start',1,'p_start','yacc.py',7),
  ('assign -> ID = expr','assign',3,'p_assign','yacc.py',11),
  ('expr -> expr + term','expr',3,'p_expr_plus','yacc.py',19),
  ('expr -> expr - term','expr',3,'p_expr_minus','yacc.py',24),
  ('expr -> term','expr',1,'p_expr_term','yacc.py',29),
  ('term -> term * factor','term',3,'p_term_mul','yacc.py',34),
  ('term -> term / factor','term',3,'p_term_div','yacc.py',39),
  ('term -> factor','term',1,'p_term_factor','yacc.py',44),
  ('factor -> DECIMAL','factor',1,'p_factor','yacc.py',49),
  ('factor -> NUMBER','factor',1,'p_factor','yacc.py',50),
  ('factor -> ( expr )','factor',3,'p_factor_expr','yacc.py',54),
]
